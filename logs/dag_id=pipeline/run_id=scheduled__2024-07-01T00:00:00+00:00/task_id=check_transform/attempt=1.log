[2024-07-02T15:20:01.213+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: pipeline.check_transform scheduled__2024-07-01T00:00:00+00:00 [queued]>
[2024-07-02T15:20:01.222+0000] {taskinstance.py:1957} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: pipeline.check_transform scheduled__2024-07-01T00:00:00+00:00 [queued]>
[2024-07-02T15:20:01.222+0000] {taskinstance.py:2171} INFO - Starting attempt 1 of 1
[2024-07-02T15:20:01.236+0000] {taskinstance.py:2192} INFO - Executing <Task(_PythonExternalDecoratedOperator): check_transform> on 2024-07-01 00:00:00+00:00
[2024-07-02T15:20:01.243+0000] {standard_task_runner.py:60} INFO - Started process 989 to run task
[2024-07-02T15:20:01.245+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'pipeline', 'check_transform', 'scheduled__2024-07-01T00:00:00+00:00', '--job-id', '13', '--raw', '--subdir', 'DAGS_FOLDER/pipeline.py', '--cfg-path', '/tmp/tmpbh79pch_']
[2024-07-02T15:20:01.247+0000] {standard_task_runner.py:88} INFO - Job 13: Subtask check_transform
[2024-07-02T15:20:01.288+0000] {task_command.py:423} INFO - Running <TaskInstance: pipeline.check_transform scheduled__2024-07-01T00:00:00+00:00 [running]> on host e21b7712e0d7
[2024-07-02T15:20:01.359+0000] {taskinstance.py:2481} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='pipeline' AIRFLOW_CTX_TASK_ID='check_transform' AIRFLOW_CTX_EXECUTION_DATE='2024-07-01T00:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2024-07-01T00:00:00+00:00'
[2024-07-02T15:20:01.394+0000] {python.py:903} WARNING - When checking for Airflow installed in virtual environment got Command '['/opt/airflow/soda_venv/bin/python', '-c', 'from airflow import __version__; print(__version__)']' returned non-zero exit status 1.
[2024-07-02T15:20:01.395+0000] {python.py:904} WARNING - This means that Airflow is not properly installed by  /opt/***/soda_venv/bin/python. Airflow context keys will not be available. Please Install Airflow 2.8.0 in your environment to access them.
[2024-07-02T15:20:01.632+0000] {process_utils.py:182} INFO - Executing cmd: /opt/***/soda_venv/bin/python /tmp/venv-call5v2c7khw/script.py /tmp/venv-call5v2c7khw/script.in /tmp/venv-call5v2c7khw/script.out /tmp/venv-call5v2c7khw/string_args.txt /tmp/venv-call5v2c7khw/termination.log
[2024-07-02T15:20:01.647+0000] {process_utils.py:186} INFO - Output:
[2024-07-02T15:20:07.647+0000] {process_utils.py:190} INFO - Running Soda Scan ...
[2024-07-02T15:20:07.647+0000] {process_utils.py:190} INFO - INFO   | Soda Core 3.0.45
[2024-07-02T15:20:07.647+0000] {process_utils.py:190} INFO - DEBUG  | Reading configuration file "/opt/***/dossier/soda/configuration/configuration.yml"
[2024-07-02T15:20:07.648+0000] {process_utils.py:190} INFO - DEBUG  | Reading SodaCL file "/opt/***/dossier/soda/checks/transform/fct_invoices.yml"
[2024-07-02T15:20:07.648+0000] {process_utils.py:190} INFO - DEBUG  | Reading SodaCL file "/opt/***/dossier/soda/checks/transform/dim_customer.yml"
[2024-07-02T15:20:07.648+0000] {process_utils.py:190} INFO - DEBUG  | Reading SodaCL file "/opt/***/dossier/soda/checks/transform/dim_product.yml"
[2024-07-02T15:20:07.648+0000] {process_utils.py:190} INFO - DEBUG  | Reading SodaCL file "/opt/***/dossier/soda/checks/transform/dim_datetime.yml"
[2024-07-02T15:20:07.648+0000] {process_utils.py:190} INFO - DEBUG  | Scan execution starts
[2024-07-02T15:20:07.649+0000] {process_utils.py:190} INFO - DEBUG  | Postgres connection properties: host="postgres", port="None", database="***", user="***", options="-c search_path=public", connection_timeout="None"
[2024-07-02T15:20:07.649+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.fct_invoices.aggregation[0]:
[2024-07-02T15:20:07.649+0000] {process_utils.py:190} INFO - SELECT
[2024-07-02T15:20:07.649+0000] {process_utils.py:190} INFO -   COUNT(CASE WHEN invoice_id IS NULL THEN 1 END)
[2024-07-02T15:20:07.649+0000] {process_utils.py:190} INFO - FROM public.fct_invoices
[2024-07-02T15:20:07.649+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_customer.aggregation[0]:
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO - SELECT
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO -   COUNT(CASE WHEN customer_id IS NULL THEN 1 END)
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO - FROM public.dim_customer
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_customer.customer_id.duplicate_count:
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO - WITH frequencies AS (
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO -     SELECT COUNT(*) AS frequency
[2024-07-02T15:20:07.650+0000] {process_utils.py:190} INFO -     FROM public.dim_customer
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO -     WHERE customer_id IS NOT NULL
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO -     GROUP BY customer_id)
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO - SELECT count(*)
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO - FROM frequencies
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO - WHERE frequency > 1
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.customer_id.failed_rows[duplicate_count]:
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.651+0000] {process_utils.py:190} INFO - WITH frequencies AS (
[2024-07-02T15:20:07.652+0000] {process_utils.py:190} INFO -     SELECT customer_id
[2024-07-02T15:20:07.652+0000] {process_utils.py:190} INFO -     FROM public.dim_customer
[2024-07-02T15:20:07.652+0000] {process_utils.py:190} INFO -     WHERE customer_id IS NOT NULL
[2024-07-02T15:20:07.652+0000] {process_utils.py:190} INFO -     GROUP BY customer_id
[2024-07-02T15:20:07.652+0000] {process_utils.py:190} INFO -     HAVING count(*) > 1)
[2024-07-02T15:20:07.652+0000] {process_utils.py:190} INFO - SELECT main.*
[2024-07-02T15:20:07.652+0000] {process_utils.py:190} INFO - FROM public.dim_customer main
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO - JOIN frequencies ON main.customer_id = frequencies.customer_id
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO - LIMIT 100
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO - INFO   | Sending failed row samples to Soda Cloud
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_customer.duplicate_count[customer_id].failed_rows.aggregated:
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO - WITH frequencies AS (
[2024-07-02T15:20:07.653+0000] {process_utils.py:190} INFO -     SELECT customer_id, COUNT(*) AS frequency
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO -     FROM public.dim_customer
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO -     WHERE customer_id IS NOT NULL
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO -     GROUP BY customer_id)
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO - SELECT *
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO - FROM frequencies
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO - WHERE frequency > 1
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO - ORDER BY frequency DESC
[2024-07-02T15:20:07.654+0000] {process_utils.py:190} INFO - LIMIT 100
[2024-07-02T15:20:07.655+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_product.aggregation[0]:
[2024-07-02T15:20:07.655+0000] {process_utils.py:190} INFO - SELECT
[2024-07-02T15:20:07.655+0000] {process_utils.py:190} INFO -   COUNT(CASE WHEN product_id IS NULL THEN 1 END),
[2024-07-02T15:20:07.655+0000] {process_utils.py:190} INFO -   MIN(price)
[2024-07-02T15:20:07.655+0000] {process_utils.py:190} INFO - FROM public.dim_product
[2024-07-02T15:20:07.655+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_product.product_id.duplicate_count:
[2024-07-02T15:20:07.655+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.656+0000] {process_utils.py:190} INFO - WITH frequencies AS (
[2024-07-02T15:20:07.656+0000] {process_utils.py:190} INFO -     SELECT COUNT(*) AS frequency
[2024-07-02T15:20:07.656+0000] {process_utils.py:190} INFO -     FROM public.dim_product
[2024-07-02T15:20:07.656+0000] {process_utils.py:190} INFO -     WHERE product_id IS NOT NULL
[2024-07-02T15:20:07.656+0000] {process_utils.py:190} INFO -     GROUP BY product_id)
[2024-07-02T15:20:07.656+0000] {process_utils.py:190} INFO - SELECT count(*)
[2024-07-02T15:20:07.656+0000] {process_utils.py:190} INFO - FROM frequencies
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO - WHERE frequency > 1
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_product.duplicate_count[product_id].failed_rows.aggregated:
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO - WITH frequencies AS (
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO -     SELECT product_id, COUNT(*) AS frequency
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO -     FROM public.dim_product
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO -     WHERE product_id IS NOT NULL
[2024-07-02T15:20:07.657+0000] {process_utils.py:190} INFO -     GROUP BY product_id)
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO - SELECT *
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO - FROM frequencies
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO - WHERE frequency > 1
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO - ORDER BY frequency DESC
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO - LIMIT 100
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_datetime.aggregation[0]:
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO - SELECT
[2024-07-02T15:20:07.658+0000] {process_utils.py:190} INFO -   COUNT(CASE WHEN NOT (weekday IS NULL) AND NOT (weekday >= 0.0 AND weekday <= 6.0) THEN 1 END),
[2024-07-02T15:20:07.659+0000] {process_utils.py:190} INFO -   COUNT(CASE WHEN datetime_id IS NULL THEN 1 END)
[2024-07-02T15:20:07.659+0000] {process_utils.py:190} INFO - FROM public.dim_datetime
[2024-07-02T15:20:07.659+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_datetime.datetime_id.duplicate_count:
[2024-07-02T15:20:07.659+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.660+0000] {process_utils.py:190} INFO - WITH frequencies AS (
[2024-07-02T15:20:07.660+0000] {process_utils.py:190} INFO -     SELECT COUNT(*) AS frequency
[2024-07-02T15:20:07.660+0000] {process_utils.py:190} INFO -     FROM public.dim_datetime
[2024-07-02T15:20:07.660+0000] {process_utils.py:190} INFO -     WHERE datetime_id IS NOT NULL
[2024-07-02T15:20:07.660+0000] {process_utils.py:190} INFO -     GROUP BY datetime_id)
[2024-07-02T15:20:07.660+0000] {process_utils.py:190} INFO - SELECT count(*)
[2024-07-02T15:20:07.660+0000] {process_utils.py:190} INFO - FROM frequencies
[2024-07-02T15:20:07.661+0000] {process_utils.py:190} INFO - WHERE frequency > 1
[2024-07-02T15:20:07.661+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_datetime.duplicate_count[datetime_id].failed_rows.aggregated:
[2024-07-02T15:20:07.661+0000] {process_utils.py:190} INFO - 
[2024-07-02T15:20:07.661+0000] {process_utils.py:190} INFO - WITH frequencies AS (
[2024-07-02T15:20:07.661+0000] {process_utils.py:190} INFO -     SELECT datetime_id, COUNT(*) AS frequency
[2024-07-02T15:20:07.661+0000] {process_utils.py:190} INFO -     FROM public.dim_datetime
[2024-07-02T15:20:07.661+0000] {process_utils.py:190} INFO -     WHERE datetime_id IS NOT NULL
[2024-07-02T15:20:07.662+0000] {process_utils.py:190} INFO -     GROUP BY datetime_id)
[2024-07-02T15:20:07.662+0000] {process_utils.py:190} INFO - SELECT *
[2024-07-02T15:20:07.662+0000] {process_utils.py:190} INFO - FROM frequencies
[2024-07-02T15:20:07.662+0000] {process_utils.py:190} INFO - WHERE frequency > 1
[2024-07-02T15:20:07.662+0000] {process_utils.py:190} INFO - ORDER BY frequency DESC
[2024-07-02T15:20:07.662+0000] {process_utils.py:190} INFO - LIMIT 100
[2024-07-02T15:20:07.662+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.fct_invoices.schema[fct_invoices]:
[2024-07-02T15:20:07.663+0000] {process_utils.py:190} INFO - SELECT column_name, data_type, is_nullable
[2024-07-02T15:20:07.663+0000] {process_utils.py:190} INFO - FROM information_schema.columns
[2024-07-02T15:20:07.663+0000] {process_utils.py:190} INFO - WHERE lower(table_name) = 'fct_invoices'
[2024-07-02T15:20:07.663+0000] {process_utils.py:190} INFO -   AND lower(table_catalog) = '***'
[2024-07-02T15:20:07.663+0000] {process_utils.py:190} INFO -   AND lower(table_schema) = 'public'
[2024-07-02T15:20:07.663+0000] {process_utils.py:190} INFO - ORDER BY ORDINAL_POSITION
[2024-07-02T15:20:07.663+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.failed_rows[failed rows]:
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - SELECT invoice_id, total
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - FROM fct_invoices
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - WHERE total < 0
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - INFO   | Sending failed row samples to Soda Cloud
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_customer.schema[dim_customer]:
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - SELECT column_name, data_type, is_nullable
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - FROM information_schema.columns
[2024-07-02T15:20:07.664+0000] {process_utils.py:190} INFO - WHERE lower(table_name) = 'dim_customer'
[2024-07-02T15:20:07.665+0000] {process_utils.py:190} INFO -   AND lower(table_catalog) = '***'
[2024-07-02T15:20:07.665+0000] {process_utils.py:190} INFO -   AND lower(table_schema) = 'public'
[2024-07-02T15:20:07.665+0000] {process_utils.py:190} INFO - ORDER BY ORDINAL_POSITION
[2024-07-02T15:20:07.665+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_product.schema[dim_product]:
[2024-07-02T15:20:07.665+0000] {process_utils.py:190} INFO - SELECT column_name, data_type, is_nullable
[2024-07-02T15:20:07.665+0000] {process_utils.py:190} INFO - FROM information_schema.columns
[2024-07-02T15:20:07.665+0000] {process_utils.py:190} INFO - WHERE lower(table_name) = 'dim_product'
[2024-07-02T15:20:07.666+0000] {process_utils.py:190} INFO -   AND lower(table_catalog) = '***'
[2024-07-02T15:20:07.666+0000] {process_utils.py:190} INFO -   AND lower(table_schema) = 'public'
[2024-07-02T15:20:07.666+0000] {process_utils.py:190} INFO - ORDER BY ORDINAL_POSITION
[2024-07-02T15:20:07.666+0000] {process_utils.py:190} INFO - DEBUG  | Query bdpostgres.dim_datetime.schema[dim_datetime]:
[2024-07-02T15:20:07.666+0000] {process_utils.py:190} INFO - SELECT column_name, data_type, is_nullable
[2024-07-02T15:20:07.666+0000] {process_utils.py:190} INFO - FROM information_schema.columns
[2024-07-02T15:20:07.666+0000] {process_utils.py:190} INFO - WHERE lower(table_name) = 'dim_datetime'
[2024-07-02T15:20:07.667+0000] {process_utils.py:190} INFO -   AND lower(table_catalog) = '***'
[2024-07-02T15:20:07.667+0000] {process_utils.py:190} INFO -   AND lower(table_schema) = 'public'
[2024-07-02T15:20:07.667+0000] {process_utils.py:190} INFO - ORDER BY ORDINAL_POSITION
[2024-07-02T15:20:07.667+0000] {process_utils.py:190} INFO - INFO   | Scan summary:
[2024-07-02T15:20:07.667+0000] {process_utils.py:190} INFO - DEBUG  | 16/16 queries OK
[2024-07-02T15:20:07.667+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.fct_invoices.aggregation[0] [OK] 0:00:00.043975
[2024-07-02T15:20:07.667+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_customer.aggregation[0] [OK] 0:00:00.001140
[2024-07-02T15:20:07.668+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_customer.customer_id.duplicate_count [OK] 0:00:00.003691
[2024-07-02T15:20:07.668+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.customer_id.failed_rows[duplicate_count] [OK] 0:00:01.057062
[2024-07-02T15:20:07.668+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_customer.duplicate_count[customer_id].failed_rows.aggregated [OK] 0:00:00.003433
[2024-07-02T15:20:07.668+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_product.aggregation[0] [OK] 0:00:00.002086
[2024-07-02T15:20:07.668+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_product.product_id.duplicate_count [OK] 0:00:00.006054
[2024-07-02T15:20:07.669+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_product.duplicate_count[product_id].failed_rows.aggregated [OK] 0:00:00.007368
[2024-07-02T15:20:07.669+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_datetime.aggregation[0] [OK] 0:00:00.002422
[2024-07-02T15:20:07.669+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_datetime.datetime_id.duplicate_count [OK] 0:00:00.007473
[2024-07-02T15:20:07.669+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_datetime.duplicate_count[datetime_id].failed_rows.aggregated [OK] 0:00:00.008692
[2024-07-02T15:20:07.669+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.fct_invoices.schema[fct_invoices] [OK] 0:00:00.005262
[2024-07-02T15:20:07.669+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.failed_rows[failed rows] [OK] 0:00:00.079968
[2024-07-02T15:20:07.669+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_customer.schema[dim_customer] [OK] 0:00:00.003095
[2024-07-02T15:20:07.670+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_product.schema[dim_product] [OK] 0:00:00.002976
[2024-07-02T15:20:07.670+0000] {process_utils.py:190} INFO - DEBUG  |   bdpostgres.dim_datetime.schema[dim_datetime] [OK] 0:00:00.004627
[2024-07-02T15:20:07.670+0000] {process_utils.py:190} INFO - INFO   | 13/14 checks PASSED:
[2024-07-02T15:20:07.670+0000] {process_utils.py:190} INFO - INFO   |     fct_invoices in bdpostgres
[2024-07-02T15:20:07.670+0000] {process_utils.py:190} INFO - INFO   |       Schema Check [/opt/***/dossier/soda/checks/transform/fct_invoices.yml] [PASSED]
[2024-07-02T15:20:07.671+0000] {process_utils.py:190} INFO - INFO   |         schema_measured = [invoice_id text, datetime_id timestamp without time zone, product_id text, customer_id text, quantity integer, total double precision]
[2024-07-02T15:20:07.671+0000] {process_utils.py:190} INFO - INFO   |       All invoices have a positive total amount [/opt/***/dossier/soda/checks/transform/fct_invoices.yml] [PASSED]
[2024-07-02T15:20:07.671+0000] {process_utils.py:190} INFO - INFO   |         value: 0
[2024-07-02T15:20:07.671+0000] {process_utils.py:190} INFO - INFO   |       All invoices have a key [/opt/***/dossier/soda/checks/transform/fct_invoices.yml] [PASSED]
[2024-07-02T15:20:07.671+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0
[2024-07-02T15:20:07.671+0000] {process_utils.py:190} INFO - INFO   |     dim_customer in bdpostgres
[2024-07-02T15:20:07.672+0000] {process_utils.py:190} INFO - INFO   |       Schema Check [/opt/***/dossier/soda/checks/transform/dim_customer.yml] [PASSED]
[2024-07-02T15:20:07.672+0000] {process_utils.py:190} INFO - INFO   |         schema_measured = [customer_id text, country text, iso character varying]
[2024-07-02T15:20:07.672+0000] {process_utils.py:190} INFO - INFO   |       All customers have a key [/opt/***/dossier/soda/checks/transform/dim_customer.yml] [PASSED]
[2024-07-02T15:20:07.672+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0
[2024-07-02T15:20:07.672+0000] {process_utils.py:190} INFO - INFO   |     dim_product in bdpostgres
[2024-07-02T15:20:07.672+0000] {process_utils.py:190} INFO - INFO   |       Schema Check [/opt/***/dossier/soda/checks/transform/dim_product.yml] [PASSED]
[2024-07-02T15:20:07.673+0000] {process_utils.py:190} INFO - INFO   |         schema_measured = [product_id text, stock_code text, description text, price real]
[2024-07-02T15:20:07.673+0000] {process_utils.py:190} INFO - INFO   |       All products are unique [/opt/***/dossier/soda/checks/transform/dim_product.yml] [PASSED]
[2024-07-02T15:20:07.673+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0
[2024-07-02T15:20:07.673+0000] {process_utils.py:190} INFO - INFO   |       All products have a key [/opt/***/dossier/soda/checks/transform/dim_product.yml] [PASSED]
[2024-07-02T15:20:07.673+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0
[2024-07-02T15:20:07.674+0000] {process_utils.py:190} INFO - INFO   |       min(price) fail when < 0 [/opt/***/dossier/soda/checks/transform/dim_product.yml] [PASSED]
[2024-07-02T15:20:07.674+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0.001
[2024-07-02T15:20:07.674+0000] {process_utils.py:190} INFO - INFO   |     dim_datetime in bdpostgres
[2024-07-02T15:20:07.674+0000] {process_utils.py:190} INFO - INFO   |       Schema Check [/opt/***/dossier/soda/checks/transform/dim_datetime.yml] [PASSED]
[2024-07-02T15:20:07.674+0000] {process_utils.py:190} INFO - INFO   |         schema_measured = [datetime_id timestamp without time zone, datetime timestamp with time zone, year double precision, month double precision, day double precision, hour double precision, minute double precision, weekday double precision]
[2024-07-02T15:20:07.675+0000] {process_utils.py:190} INFO - INFO   |       All weekdays are in range 0-6 [/opt/***/dossier/soda/checks/transform/dim_datetime.yml] [PASSED]
[2024-07-02T15:20:07.675+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0
[2024-07-02T15:20:07.675+0000] {process_utils.py:190} INFO - INFO   |       All datetimes are unique [/opt/***/dossier/soda/checks/transform/dim_datetime.yml] [PASSED]
[2024-07-02T15:20:07.675+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0
[2024-07-02T15:20:07.675+0000] {process_utils.py:190} INFO - INFO   |       All datetimes have a key [/opt/***/dossier/soda/checks/transform/dim_datetime.yml] [PASSED]
[2024-07-02T15:20:07.676+0000] {process_utils.py:190} INFO - INFO   |         check_value: 0
[2024-07-02T15:20:07.676+0000] {process_utils.py:190} INFO - INFO   | 1/14 checks FAILED:
[2024-07-02T15:20:07.676+0000] {process_utils.py:190} INFO - INFO   |     dim_customer in bdpostgres
[2024-07-02T15:20:07.676+0000] {process_utils.py:190} INFO - INFO   |       All customers are unique [/opt/***/dossier/soda/checks/transform/dim_customer.yml] [FAILED]
[2024-07-02T15:20:07.676+0000] {process_utils.py:190} INFO - INFO   |         check_value: 4358
[2024-07-02T15:20:07.677+0000] {process_utils.py:190} INFO - INFO   | Oops! 1 failures. 0 warnings. 0 errors. 13 pass.
[2024-07-02T15:20:07.677+0000] {process_utils.py:190} INFO - INFO   | Sending results to Soda Cloud
[2024-07-02T15:20:07.677+0000] {process_utils.py:190} INFO - INFO   | Soda Cloud Trace: 1657238648591810534
[2024-07-02T15:20:07.677+0000] {process_utils.py:190} INFO - Traceback (most recent call last):
[2024-07-02T15:20:07.677+0000] {process_utils.py:190} INFO -   File "/tmp/venv-call5v2c7khw/script.py", line 33, in <module>
[2024-07-02T15:20:07.677+0000] {process_utils.py:190} INFO -     res = check_transform(*arg_dict["args"], **arg_dict["kwargs"])
[2024-07-02T15:20:07.678+0000] {process_utils.py:190} INFO -   File "/tmp/venv-call5v2c7khw/script.py", line 30, in check_transform
[2024-07-02T15:20:07.678+0000] {process_utils.py:190} INFO -     a = run_soda_scan(project_root = PROJECT_ROOT, scan_name ="checks_transform", checks_subpath="transform")
[2024-07-02T15:20:07.678+0000] {process_utils.py:190} INFO -   File "/opt/***/dossier/soda/checks/fonction.py", line 24, in run_soda_scan
[2024-07-02T15:20:07.678+0000] {process_utils.py:190} INFO -     raise ValueError('Soda Scan failed')
[2024-07-02T15:20:07.678+0000] {process_utils.py:190} INFO - ValueError: Soda Scan failed
[2024-07-02T15:20:07.769+0000] {taskinstance.py:2699} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 433, in _execute_task
    result = execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/decorators/base.py", line 242, in execute
    return_value = super().execute(context)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 400, in execute
    return super().execute(context=serializable_context)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 199, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 851, in execute_callable
    return self._execute_python_callable_in_subprocess(python_path)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 471, in _execute_python_callable_in_subprocess
    raise AirflowException(error_msg) from None
airflow.exceptions.AirflowException: Process returned non-zero exit status 1.
Soda Scan failed
[2024-07-02T15:20:07.775+0000] {taskinstance.py:1138} INFO - Marking task as FAILED. dag_id=pipeline, task_id=check_transform, execution_date=20240701T000000, start_date=20240702T152001, end_date=20240702T152007
[2024-07-02T15:20:07.790+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 13 for task check_transform (Process returned non-zero exit status 1.
Soda Scan failed; 989)
[2024-07-02T15:20:07.804+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-07-02T15:20:07.822+0000] {taskinstance.py:3281} INFO - 0 downstream tasks scheduled from follow-on schedule check
